"use strict";(self.webpackChunk_matano_website=self.webpackChunk_matano_website||[]).push([[6883],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,g=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(g,r(r({ref:t},p),{},{components:n})):a.createElement(g,r({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var c=2;c<i;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},25017:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(87462),o=(n(67294),n(3905));const i={title:"Importing from Sigma rules",sidebar_position:2},r=void 0,s={unversionedId:"detections/importing-from-sigma-rules",id:"detections/importing-from-sigma-rules",title:"Importing from Sigma rules",description:"Sigma is a popular open source vendor agnostic format for writing detection rules in a YAML-based signature format. You can import Sigma rules into Matano Python detections.",source:"@site/docs/detections/importing-from-sigma-rules.md",sourceDirName:"detections",slug:"/detections/importing-from-sigma-rules",permalink:"/docs/detections/importing-from-sigma-rules",draft:!1,editUrl:"https://github.com/matanolabs/matano/tree/main/website/docs/detections/importing-from-sigma-rules.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Importing from Sigma rules",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Authoring detections",permalink:"/docs/detections/authoring"},next:{title:"Remote cache",permalink:"/docs/detections/remote-cache"}},l={},c=[{value:"How to import Sigma rules into Python detections",id:"how-to-import-sigma-rules-into-python-detections",level:2},{value:"Steps",id:"steps",level:3},{value:"Example",id:"example",level:2}],p={toc:c};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/SigmaHQ/pySigma"},"Sigma")," is a popular open source vendor agnostic format for writing detection rules in a YAML-based signature format. You can import Sigma rules into Matano Python detections."),(0,o.kt)("h2",{id:"how-to-import-sigma-rules-into-python-detections"},"How to import Sigma rules into Python detections"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Matano only supports the newer ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/SigmaHQ/pySigma"},"pySigma"),", not the legacy sigma.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You cannot currently use the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/SigmaHQ/sigma-cli"},(0,o.kt)("inlineCode",{parentName:"a"},"sigma")," cli")," to convert Sigma rules to Matano detections. You can use a Python script that you can execute. Follow this ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/SigmaHQ/sigma-cli/issues/3"},"Sigma issue")," for integration with sigma CLI.")),(0,o.kt)("p",null,"To import Sigma rules into Matano Python detections, you use the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/matanolabs/pySigma-backend-matano"},(0,o.kt)("em",{parentName:"a"},"Matano backend for Sigma"))," which translates Sigma rules into Python detections."),(0,o.kt)("h3",{id:"steps"},"Steps"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Install the Matano backend for Sigma by running ",(0,o.kt)("inlineCode",{parentName:"li"},"pip install git+https://github.com/matanolabs/pySigma-backend-matano.git"),"."),(0,o.kt)("li",{parentName:"ol"},"Download the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/matanolabs/matano/blob/main/scripts/sigma_generate.py"},"following Python script"),"."),(0,o.kt)("li",{parentName:"ol"},"Execute the script by running ",(0,o.kt)("inlineCode",{parentName:"li"},"python sigma_generate.py <filepath>"),".",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"You can pass a pipeline using the ",(0,o.kt)("inlineCode",{parentName:"li"},"--pipeline")," argument. Run the help command for a list of supported pipelines (e.g. ECS CloudTrail)."))),(0,o.kt)("li",{parentName:"ol"},"The script will output a ready to use detection directory in the current directory, containing a ",(0,o.kt)("inlineCode",{parentName:"li"},"detect.py")," script and ",(0,o.kt)("inlineCode",{parentName:"li"},"detection.yml")," configuration file."),(0,o.kt)("li",{parentName:"ol"},"You can copy the detection directory into your Matano directory to use the detection.")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"The following Sigma Rule:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"title: AWS EC2 Disable EBS Encryption\nid: 16124c2d-e40b-4fcc-8f2c-5ab7870a2223\nstatus: stable\ndescription: Identifies disabling of default Amazon Elastic Block Store (EBS) encryption in the current region. Disabling default encryption does not change the encryption status of your existing volumes.\nauthor: Sittikorn S\ndate: 2021/06/29\nmodified: 2021/08/20\nreferences:\n  - https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableEbsEncryptionByDefault.html\ntags:\n  - attack.impact\n  - attack.t1486\n  - attack.t1565\nlogsource:\n  product: aws\n  service: cloudtrail\ndetection:\n  selection:\n    eventSource: ec2.amazonaws.com\n    eventName: DisableEbsEncryptionByDefault\n  condition: selection\nfalsepositives:\n  - System Administrator Activities\n  - DEV, UAT, SAT environment. You should apply this rule with PROD account only.\nlevel: medium\n")),(0,o.kt)("p",null,"will be converted into a Matano detection with the following ",(0,o.kt)("inlineCode",{parentName:"p"},"detection.yml")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"detect.py"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},'# detection.yml\n# This file was generated from a Sigma rule\n\nauthor: Sittikorn S\ndate: "2021-06-29"\ndescription: Identifies disabling of default Amazon Elastic Block Store (EBS) encryption\n  in the current region. Disabling default encryption does not change the encryption\n  status of your existing volumes.\nid: 16124c2d-e40b-4fcc-8f2c-5ab7870a2223\nlevel: medium\nreferences:\n  - https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableEbsEncryptionByDefault.html\nstatus: stable\n\nname: aws_ec2_disable_ebs_encryption\ntables:\n  - aws_cloudtrail\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# detect.py\nimport re, json, functools, ipaddress\nfrom fnmatch import fnmatch\n\ndef detect(record):\n    return (\n        record.get("event", {}).get("provider") == "ec2.amazonaws.com"\n        and record.get("event", {}).get("action") == "DisableEbsEncryptionByDefault"\n    )\n')))}m.isMDXComponent=!0}}]);